name: Build/Publish Latest Release Docs

on:
  push:
    branches:
      - main

permissions:
  contents: write
jobs:
  build_check:
    outputs: 
      status: ${{ steps.build_trigger_check.conclusion }}
    runs-on: ubuntu-latest
    steps:
      - name: Get Commit Message Prefix
        id: commit_message_prefix
        run: |
          trigger=$(echo "${{ github.event.head_commit.message }}" | cut -d ' ' -f 1)
          version=$(echo "${{ github.event.head_commit.message }}" | cut -d ' ' -f 2)
          echo "build_trigger=$trigger" >> $GITHUB_OUTPUT
          echo "commit_prefix=$version" >> $GITHUB_OUTPUT
      - name: Build Trigger Check
        id: build_trigger_check
        if: ${{ ! contains(steps.commit_message_prefix.outputs.build_trigger, 'build') }}
        run: |
          if [ ${{ steps.commit_message_prefix.outputs.build_trigger }} == "build" ]
          then
            echo "Trigger word found" >> $GITHUB_STEP_SUMMARY
            echo "build"
          else
            echo "Trigger word not found" >> $GITHUB_STEP_SUMMARY
            echo "cancel"
          fi
  
  deploy:
    needs: build_check
    if: needs.build_check.outputs.status == 'build'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v4
        with:
          python-version: 3.10.6
      - name: Install Dependencies
        run: |
          pip install -r docs/requirements.txt
      - name: Setup Docs Deploy
        run: |
          git config --global user.name "Docs Deploy"
          git config --global user.email "itzteajay@gmail.com"
      - name: Build Docs Website
        run: | 
          mike deploy --push --update-aliases ${{ steps.commit_message_prefix.outputs.commit_prefix }} latest
          echo "Build complete for version: ${{ steps.commit_message_prefix.outputs.commit_prefix }}" >> $GITHUB_STEP_SUMMARY